{"version":3,"file":"static/js/47.382920b7.chunk.js","mappings":"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","sources":["components/RegistrationForm/RegistrationForm.styled.js","components/RegistrationForm/RegistrationForm.jsx","pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const FormContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 53px auto 105px auto;\n  width: 280px;\n  padding: 40px 20px;\n  background-color: var(--bg-white-color);\n  border-radius: 30px;\n  box-shadow: 0px 10px 60px 0px var(--box-shadow-color);\n  \n  @media screen and (min-width: 768px) {\n  margin: 80px auto 155px auto;\n  padding: 56px 83px;\n  width: 426px;\n  }\n  \n  @media screen and (min-width: 1280px) {\n  position: absolute;\n  top: 173px;\n  margin: 0;\n  left: 763px;\n  right: 91px;\n}\n`;\n\nexport const FormAdvice = styled.p`\n  font-style: normal;\n  font-weight: 400;\n  font-size: 12px;\n  width: 222px;\n  text-align: center;\n  letter-spacing: 0.04em;\n  line-height: 1.4;\n  color: var(--secondaryTextColor);\n  margin-bottom: 16px;\n  \n  @media screen and (min-width: 768px) {\n  width: auto;\n  margin-bottom: 20px;\n  }\n  \n  @media screen and (min-width: 1280px) {\nmargin-bottom: 29px;\n}\n`;\n\nexport const FormAdviceSecond = styled.p`\n  font-style: normal;\n  font-weight: 400;\n  font-size: 12px;\n  width: 238px;\n  text-align: left;\n  letter-spacing: 0.04em;\n  line-height: 1.4;\n  color: var(--secondaryTextColor);\n  margin-bottom: 16px;\n  margin-left: 0;\n  \n  @media screen and (min-width: 768px) {\n  margin-bottom: 20px;\n  }\n  \n  @media screen and (min-width: 1280px) {\n  margin-bottom: 29px;\n}\n`;\n\nexport const GoogleButton = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-left: auto;\n  margin-right: auto;\n  column-gap: 9.5px;\n  border: none;\n  padding: 10px 19px;\n  border-radius: 26px;\n  cursor: pointer;\n  margin-bottom: 32px;\n  box-shadow: 1px 2px 3px 0px var(--box-shadow-color);\n`;\n\nexport const GoogleText = styled.span`\n  font-size: 14px;\n  font-weight: 500;\n  letter-spacing: 0.02em;\n  line-height: 1.17;\n`;\n\nexport const FormForm = styled.form`\n  row-gap: 8px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const FormLabel = styled.label`\n  font-size: 10px;\n  font-weight: 500;\n  letter-spacing: 0.04em;\n  align-self: flex-start;\n  margin-bottom: 12px;\n  margin-left: 0;\n  color: var(--textColor);\n  \n  @media screen and (min-width: 768px) {\n  font-size: 12px;\n  letter-spacing: 0.04em;\n  }\n`;\n\nexport const FormInput = styled.input`\n  padding: 17px 0 17px 20px;\n  margin-left: 0;\n  margin-bottom: 20px;\n  font-size: 14px;\n  letter-spacing: 0.04em;\n  text-align: left;\n  min-width: 240px;\n  border-radius: 30px;\n  border: none;\n  background-color: var(--bg-input-color);\n  color: var(--text-input-color);\n  \n  @media screen and (min-width: 768px) {\n  padding: 17px 0 17px 20px;\n  min-width: 259px;\n  margin-bottom: 32px;\n  }\n`;\n\nexport const FormButtons = styled.div`\n  display: flex;\n  column-gap: 4px;\n  \n  @media screen and (min-width: 768px) {\n  column-gap: 15px;\n  }\n`;\n\nexport const FormButton = styled.button`\n  display: flex;\n  justify-content: center;\n  padding: 12px 34px;\n  font-size: 12px;\n  font-weight: 700;\n  cursor: pointer;\n  color: var(--btn-grey-text-color);\n  letter-spacing: 0.02em;\n  align-items: center;\n  border: none;\n  border-radius: 16px;\n  background-color: var(--btn-grey-bg-color);\n  box-shadow: 1px 3px 5px 0px var(--btn-grey-drop-shadow-color);;\n  width: 50%;\n  &:hover,\n  &:focus {\n    color: var(--btn-orange-text-color);\n    background-color: var(--btn-orange-bg-color);\n    box-shadow: var(--btn-orange-box-shadow) 1px 3px 5px 0px;\n  }\n  \n  @media screen and (min-width: 768px) {\n    padding: 12px 34px;\n  }\n`;","import { useDispatch } from 'react-redux';\nimport googleIcon from '../../icons/Google.png';\nimport { register } from '../../redux/Auth/operations';\nimport { useNavigate } from 'react-router-dom';\nimport {\n  FormContainer,\n  FormForm,\n  FormAdvice,\n  FormAdviceSecond,\n  GoogleButton,\n  GoogleText,\n  FormLabel,\n  FormInput,\n  FormButtons,\n  FormButton,\n} from '../RegistrationForm/RegistrationForm.styled';\nexport const RegistrationForm = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const handleRegistration = event => {\n    event.preventDefault();\n    const form = event.target;\n    const name = form.elements.name.value;\n    const email = form.elements.email.value;\n    const password = form.elements.password.value;\n    dispatch(register({ name, email, password }));\n    form.reset();\n  };\n  const handleLoginClick = () => {\n    navigate('/login');\n  };\n  return (\n    <FormContainer>\n      <FormAdvice>You can log in with your Google Account:</FormAdvice>\n      <GoogleButton>\n        <img src={googleIcon} alt=\"Google Icon\" />\n        <GoogleText>Google</GoogleText>\n      </GoogleButton>\n      <FormAdviceSecond>\n        Or log in using an email and password, after registering:\n      </FormAdviceSecond>\n      <FormForm onSubmit={handleRegistration}>\n        <FormLabel htmlFor=\"registrationUsername\">Name: </FormLabel>\n        <FormInput\n          id=\"registrationUsername\"\n          name=\"name\"\n          placeholder=\"Enter your name\"\n          autoComplete=\"name\"\n        />\n        <FormLabel htmlFor=\"registrationEmail\">Email: </FormLabel>\n        <FormInput\n          id=\"registrationEmail\"\n          name=\"email\"\n          type=\"email\"\n          placeholder=\"your@email.com\"\n          autoComplete=\"email\"\n        />\n        <FormLabel htmlFor=\"registrationPassword\">Password:</FormLabel>\n        <FormInput\n          id=\"registrationPassword\"\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"enter password\"\n        />\n        <FormButtons>\n          <FormButton type=\"button\" onClick={handleLoginClick}>\n            LOG IN\n          </FormButton>{' '}\n          <FormButton type=\"submit\">REGISTRATION</FormButton>\n        </FormButtons>\n      </FormForm>\n    </FormContainer>\n  );\n};\n\n// import css from './RegistrationForm.module.css';\n// import { useDispatch } from 'react-redux';\n// import googleIcon from '../../icons/Google.png';\n// import { register } from '../../redux/Auth/operations';\n// import { useNavigate } from 'react-router-dom';\n\n// export const RegistrationForm = () => {\n//   const dispatch = useDispatch();\n//   const navigate = useNavigate();\n\n//   const handleRegistration = event => {\n//     event.preventDefault();\n\n//     const form = event.target;\n//     const name = form.elements.name.value;\n//     const email = form.elements.email.value;\n//     const password = form.elements.password.value;\n\n//     dispatch(register({ name, email, password }));\n//     form.reset();\n//   };\n//   const handleLoginClick = () => {\n//     navigate('/login');\n//   };\n//   return (\n//     <div className={css.form}>\n//       <p className={css.form__advice}>\n//         You can log in with your Google Account:\n//       </p>\n//       <button className={css.form__googleButton}>\n//         <img\n//           className={css.form__googleIcon}\n//           src={googleIcon}\n//           alt=\"Google Icon\"\n//         />\n//         <span className={css.form__googleText}>Google</span>\n//       </button>\n//       <p className={css.form__second}>\n//         Or log in using an email and password, after registering:\n//       </p>\n//       <form className={css.form__form} onSubmit={handleRegistration}>\n//         <label htmlFor=\"registrationUsername\" className={css.form__label}>\n//           Name:{' '}\n//         </label>\n//         <input\n//           id=\"registrationUsername\"\n//           className={css.form__input}\n//           name=\"name\"\n//           placeholder=\"Enter your name\"\n//           autoComplete=\"name\"\n//         ></input>\n//         <label htmlFor=\"registrationEmail\" className={css.form__label}>\n//           Email:{' '}\n//         </label>\n//         <input\n//           id=\"registrationEmail\"\n//           className={css.form__input}\n//           name=\"email\"\n//           type=\"email\"\n//           placeholder=\"your@email.com\"\n//           autoComplete=\"email\"\n//         ></input>\n//         <label htmlFor=\"registrationPassword\" className={css.form__label}>\n//           Password:\n//         </label>\n//         <input\n//           id=\"registrationPassword\"\n//           className={css.form__input}\n//           name=\"password\"\n//           type=\"password\"\n//           placeholder=\"enter password\"\n//         ></input>\n//         <div className={css.form__buttons}>\n//           <button\n//             className={css.form__button}\n//             type=\"button\"\n//             onClick={handleLoginClick}\n//           >\n//             LOG IN\n//           </button>{' '}\n//           <button className={css.form__button} type=\"submit\">\n//             REGISTRATION\n//           </button>\n//         </div>\n//       </form>\n//     </div>\n//   );\n// };\n","import { RegistrationForm } from '../../components/RegistrationForm/RegistrationForm';\nimport { CabbagesTop } from '../../components/Background/Unauthorized/CabbagesTop/CabbagesTop';\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\nimport { CabbagesBottom } from '../../components/Background/Unauthorized/CabbagesBottom/CabbagesBottom';\nimport { MainLogo } from '../../components/MainLogo/MainLogo';\nimport { useScreenSize } from '../../hooks/useScreenSize';\n\nconst Register = () => {\n  const { mobileScreen, tabletScreen, desktopScreen } = useScreenSize();\n\n  return (\n    <HelmetProvider>\n      <div>\n        <Helmet>\n          <title>Registration</title>\n        </Helmet>\n        <CabbagesTop />\n        <MainLogo />\n        <RegistrationForm\n          screensize={{ mobileScreen, tabletScreen, desktopScreen }}\n        />\n        <CabbagesBottom />\n      </div>\n    </HelmetProvider>\n  );\n};\nexport default Register;\n"],"names":["FormContainer","styled","div","_templateObject","_taggedTemplateLiteral","FormAdvice","p","_templateObject2","FormAdviceSecond","_templateObject3","GoogleButton","button","_templateObject4","GoogleText","span","_templateObject5","FormForm","form","_templateObject6","FormLabel","label","_templateObject7","FormInput","input","_templateObject8","FormButtons","_templateObject9","FormButton","_templateObject10","RegistrationForm","dispatch","useDispatch","navigate","useNavigate","_jsxs","children","_jsx","src","googleIcon","alt","onSubmit","event","preventDefault","target","name","elements","value","email","password","register","reset","htmlFor","id","placeholder","autoComplete","type","onClick","handleLoginClick","Register","mobileScreen","tabletScreen","desktopScreen","useScreenSize","HelmetProvider","Helmet","CabbagesTop","MainLogo","screensize","CabbagesBottom"],"sourceRoot":""}