{"version":3,"file":"static/js/140.78c0e6fd.chunk.js","mappings":"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","sources":["webpack://kapusta-frontend/./src/components/RegistrationForm/RegistrationForm.module.css?5637","components/RegistrationForm/RegistrationForm.jsx","pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"RegistrationForm_form__c8X43\",\"form__form\":\"RegistrationForm_form__form__3-yUD\",\"form__advice\":\"RegistrationForm_form__advice__yQZWQ\",\"form__second\":\"RegistrationForm_form__second__6OXbr\",\"form__googleButton\":\"RegistrationForm_form__googleButton__JxW-q\",\"form__googleText\":\"RegistrationForm_form__googleText__jNqwf\",\"form__label\":\"RegistrationForm_form__label__SqNkU\",\"form__input\":\"RegistrationForm_form__input__ePviY\",\"form__buttons\":\"RegistrationForm_form__buttons__4wrH0\",\"form__button\":\"RegistrationForm_form__button__3Cv8G\"};","import css from './RegistrationForm.module.css';\nimport { useDispatch } from 'react-redux';\nimport googleIcon from '../../icons/Google.png';\nimport { register } from '../../redux/Auth/operations';\nimport { useNavigate } from 'react-router-dom';\n\nexport const RegistrationForm = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const handleRegistration = event => {\n    event.preventDefault();\n\n    const form = event.target;\n    const name = form.elements.name.value;\n    const email = form.elements.email.value;\n    const password = form.elements.password.value;\n\n    dispatch(register({ name, email, password }));\n    form.reset();\n  };\n  const handleLoginClick = () => {\n    navigate('/login');\n  };\n  return (\n    <div className={css.form}>\n      <p className={css.form__advice}>\n        You can log in with your Google Account:\n      </p>\n      <button className={css.form__googleButton}>\n        <img\n          className={css.form__googleIcon}\n          src={googleIcon}\n          alt=\"Google Icon\"\n        />\n        <span className={css.form__googleText}>Google</span>\n      </button>\n      <p className={css.form__second}>\n        Or log in using an email and password, after registering:\n      </p>\n      <form className={css.form__form} onSubmit={handleRegistration}>\n        <label htmlFor=\"registrationUsername\" className={css.form__label}>\n          Name:{' '}\n        </label>\n        <input\n          id=\"registrationUsername\"\n          className={css.form__input}\n          name=\"name\"\n          placeholder=\"Enter your name\"\n          autoComplete=\"name\"\n        ></input>\n        <label htmlFor=\"registrationEmail\" className={css.form__label}>\n          Email:{' '}\n        </label>\n        <input\n          id=\"registrationEmail\"\n          className={css.form__input}\n          name=\"email\"\n          type=\"email\"\n          placeholder=\"your@email.com\"\n          autoComplete=\"email\"\n        ></input>\n        <label htmlFor=\"registrationPassword\" className={css.form__label}>\n          Password:\n        </label>\n        <input\n          id=\"registrationPassword\"\n          className={css.form__input}\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"enter password\"\n        ></input>\n        <div className={css.form__buttons}>\n          <button\n            className={css.form__button}\n            type=\"button\"\n            onClick={handleLoginClick}\n          >\n            LOG IN\n          </button>{' '}\n          <button className={css.form__button} type=\"submit\">\n            REGISTRATION\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\n// import { useDispatch } from 'react-redux';\n// import googleIcon from '../../icons/Google.png';\n// import { register } from '../../redux/Auth/operations';\n// import { useNavigate } from 'react-router-dom';\n// import {\n//   FormContainer,\n//   FormForm,\n//   FormAdvice,\n//   FormAdviceSecond,\n//   GoogleButton,\n//   GoogleText,\n//   FormLabel,\n//   FormInput,\n//   FormButtons,\n//   FormButton\n// } from '../RegistrationForm/RegistrationForm.styled';\n// export const RegistrationForm = () => {\n//   const dispatch = useDispatch();\n//   const navigate = useNavigate();\n//   const handleRegistration = event => {\n//     event.preventDefault();\n//     const form = event.target;\n//     const name = form.elements.name.value;\n//     const email = form.elements.email.value;\n//     const password = form.elements.password.value;\n//     dispatch(register({ name, email, password }));\n//     form.reset();\n//   };\n//   const handleLoginClick = () => {\n//     navigate('/login');\n//   };\n//   return (\n//     <FormContainer>\n//       <FormAdvice>\n//         You can log in with your Google Account:\n//       </FormAdvice>\n//       <GoogleButton>\n//         <img\n//           src={googleIcon}\n//           alt=\"Google Icon\"\n//         />\n//         <GoogleText>Google</GoogleText>\n//       </GoogleButton>\n//       <FormAdviceSecond>\n//         Or log in using an email and password, after registering:\n//       </FormAdviceSecond>\n//       <FormForm onSubmit={handleRegistration}>\n//         <FormLabel htmlFor=\"registrationUsername\">\n//           Name:{' '}\n//         </FormLabel>\n//         <FormInput\n//           id=\"registrationUsername\"\n//           name=\"name\"\n//           placeholder=\"Enter your name\"\n//           autoComplete=\"name\"\n//         />\n//         <FormLabel htmlFor=\"registrationEmail\">\n//           Email:{' '}\n//         </FormLabel>\n//         <FormInput\n//           id=\"registrationEmail\"\n//           name=\"email\"\n//           type=\"email\"\n//           placeholder=\"your@email.com\"\n//           autoComplete=\"email\"\n//         />\n//         <FormLabel htmlFor=\"registrationPassword\">\n//           Password:\n//         </FormLabel>\n//         <FormInput\n//           id=\"registrationPassword\"\n//           name=\"password\"\n//           type=\"password\"\n//           placeholder=\"enter password\"\n//         />\n//         <FormButtons>\n//           <FormButton type=\"button\" onClick={handleLoginClick}>\n//             LOG IN\n//           </FormButton>{' '}\n//           <FormButton type=\"submit\">\n//             REGISTRATION\n//           </FormButton>\n//         </FormButtons>\n//       </FormForm>\n//     </FormContainer>\n//   );\n// };","import { RegistrationForm } from '../../components/RegistrationForm/RegistrationForm';\nimport { CabbageGroup } from '../../components/CabbageGroup/CabbageGroup.';\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\nimport { CabbageCouple } from '../../components/CabbageCouple/CabbageCouple';\nimport { MainLogo } from '../../components/MainLogo/MainLogo';\nimport { useScreenSize } from '../../hooks/useScreenSize'\n\nconst Register = () => {\n  const { mobileScreen, tabletScreen, desktopScreen } = useScreenSize();\n\n  return (\n    <HelmetProvider>\n      <div>\n        <Helmet>\n          <title>Registration</title>\n        </Helmet>\n    <CabbageGroup />\n    <MainLogo />\n    <RegistrationForm screenSize={{ mobileScreen, tabletScreen, desktopScreen }} />\n    <CabbageCouple />\n      </div>\n    </HelmetProvider>\n  );\n};\nexport default Register;\n"],"names":["RegistrationForm","dispatch","useDispatch","navigate","useNavigate","_jsxs","className","css","children","_jsx","src","googleIcon","alt","onSubmit","event","preventDefault","form","target","name","elements","value","email","password","register","reset","htmlFor","id","placeholder","autoComplete","type","onClick","_useScreenSize","useScreenSize","mobileScreen","tabletScreen","desktopScreen","HelmetProvider","Helmet","CabbageGroup","MainLogo","screenSize","CabbageCouple"],"sourceRoot":""}