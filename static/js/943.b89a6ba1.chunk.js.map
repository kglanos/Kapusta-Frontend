{"version":3,"file":"static/js/943.b89a6ba1.chunk.js","mappings":"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","sources":["components/CabbageCouple/CabbageCouple.styled.js","components/CabbageCouple/CabbageCouple.js","components/CabbageGroup/CabbageGroup.styled.js","components/CabbageGroup/CabbageGroup..js","components/MainLogo/MainLogo.styled.js","components/MainLogo/MainLogo.js","webpack://kapusta-frontend/./src/components/RegistrationForm/DS-RegistrationForm.module.css?bcb6","components/RegistrationForm/RegistrationForm.jsx","pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledImage = styled.img`\n  width: 15vw;\n  height: auto;\n`;\n\nexport const StyledContainer = styled.div`\n  position: absolute;\n  bottom: 3%;\n  left: 20%;\n`;\n","import cabbageCoupleImage from '../../images/desktop/kapusta2.png';\nimport { StyledContainer, StyledImage } from './CabbageCouple.styled';\n\nexport const CabbageCouple = () => {\n  return (\n    <StyledContainer>\n      <StyledImage src={cabbageCoupleImage} alt=\"Cabbages\" />\n    </StyledContainer>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledImage = styled.img`\n  width: 100%;\n  height: auto;\n`;\n\nexport const StyledContainer = styled.div`\n  position: absolute;\n  top: 10%;\n`;\n","import cabbageGroupImage from '../../images/desktop/kapusta.png';\nimport { StyledContainer, StyledImage } from './CabbageGroup.styled';\n\nexport const CabbageGroup = () => {\n  return (\n    <StyledContainer>\n      <StyledImage src={cabbageGroupImage} alt=\"Cabbages\" />\n    </StyledContainer>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledContainer = styled.div`\n  position: absolute;\n  bottom: 42%;\n  left: 20%;\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`;\nexport const StyledHeading = styled.h1`\n  font-size: 102px;\n  font-weight: 900;\n  text-align: left;\n  margin: 0;\n`;\n\nexport const StyledParagraph = styled.p`\n  color: rgba(82, 85, 95, 1);\n  font-size: 16px;\n  font-weight: 700;\n  line-height: 1.17;\n  letter-spacing: 0.18em;\n  text-align: left;\n  margin: 0 20%;\n`;\nexport const StyledDollar = styled.span`\n  display: inline-block;\n  font-size: 0.9em;\n  vertical-align: middle;\n  transform: scaleY(0.8) translateY(-0.05em);\n  transform-origin: 50%;\n`;\n","import {\n  StyledContainer,\n  StyledHeading,\n  StyledParagraph,\n  StyledDollar,\n} from './MainLogo.styled';\n\nexport const MainLogo = () => {\n  return (\n    <StyledContainer>\n      <StyledHeading>\n        Kapu<StyledDollar>$</StyledDollar>ta\n      </StyledHeading>\n      <StyledParagraph>SMART FINANCE</StyledParagraph>\n    </StyledContainer>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"DS-RegistrationForm_form__1rxkh\",\"form__form\":\"DS-RegistrationForm_form__form__psQo5\",\"form__advice\":\"DS-RegistrationForm_form__advice__E-TXS\",\"form__googleButton\":\"DS-RegistrationForm_form__googleButton__M+oyS\",\"form__googleText\":\"DS-RegistrationForm_form__googleText__8FEhw\",\"form__label\":\"DS-RegistrationForm_form__label__sZiST\",\"form__input\":\"DS-RegistrationForm_form__input__z2-lz\",\"form__buttons\":\"DS-RegistrationForm_form__buttons__3NhHg\",\"form__button\":\"DS-RegistrationForm_form__button__DOa2w\"};","// import { useDispatch } from 'react-redux';\n// import googleIcon from '../../icons/Google.png';\n// import { register } from '../../redux/Auth/operations';\n// import { useNavigate } from 'react-router-dom';\n// import {\n//   FormContainer,\n//   FormForm,\n//   FormAdvice,\n//   FormAdviceSecond,\n//   GoogleButton,\n//   GoogleText,\n//   FormLabel,\n//   FormInput,\n//   FormButtons,\n//   FormButton\n// } from '../RegistrationForm/RegistrationForm.styled';\n\n// export const RegistrationForm = () => {\n//   const dispatch = useDispatch();\n//   const navigate = useNavigate();\n\n//   const handleRegistration = event => {\n//     event.preventDefault();\n\n//     const form = event.target;\n//     const name = form.elements.name.value;\n//     const email = form.elements.email.value;\n//     const password = form.elements.password.value;\n\n//     dispatch(register({ name, email, password }));\n//     form.reset();\n//   };\n//   const handleLoginClick = () => {\n//     navigate('/login');\n//   };\n//   return (\n//     <FormContainer>\n//       <FormAdvice>\n//         You can log in with your Google Account:\n//       </FormAdvice>\n//       <GoogleButton>\n//         <img\n//           src={googleIcon}\n//           alt=\"Google Icon\"\n//         />\n//         <GoogleText>Google</GoogleText>\n//       </GoogleButton>\n//       <FormAdviceSecond>\n//         Or log in using an email and password, after registering:\n//       </FormAdviceSecond>\n//       <FormForm onSubmit={handleRegistration}>\n//         <FormLabel htmlFor=\"registrationUsername\">\n//           Name:{' '}\n//         </FormLabel>\n//         <FormInput\n//           id=\"registrationUsername\"\n//           name=\"name\"\n//           placeholder=\"Enter your name\"\n//           autoComplete=\"name\"\n//         />\n//         <FormLabel htmlFor=\"registrationEmail\">\n//           Email:{' '}\n//         </FormLabel>\n//         <FormInput\n//           id=\"registrationEmail\"\n//           name=\"email\"\n//           type=\"email\"\n//           placeholder=\"your@email.com\"\n//           autoComplete=\"email\"\n//         />\n//         <FormLabel htmlFor=\"registrationPassword\">\n//           Password:\n//         </FormLabel>\n//         <FormInput\n//           id=\"registrationPassword\"\n//           name=\"password\"\n//           type=\"password\"\n//           placeholder=\"enter password\"\n//         />\n//         <FormButtons>\n//           <FormButton\n//             type=\"button\"\n//             onClick={handleLoginClick}\n//           >\n//             LOG IN\n//           </FormButton>{' '}\n//           <FormButton type=\"submit\">\n//             REGISTRATION\n//           </FormButton>\n//         </FormButtons>\n//       </FormForm>\n//     </FormContainer>\n//   );\n// };\n\nimport css from './DS-RegistrationForm.module.css';\nimport { useDispatch } from 'react-redux';\nimport googleIcon from '../../icons/Google.png';\nimport { register } from '../../redux/Auth/operations';\nimport { useNavigate } from 'react-router-dom';\n\nexport const RegistrationForm = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const handleRegistration = event => {\n    event.preventDefault();\n\n    const form = event.target;\n    const name = form.elements.name.value;\n    const email = form.elements.email.value;\n    const password = form.elements.password.value;\n\n    dispatch(register({ name, email, password }));\n    form.reset();\n  };\n  const handleLoginClick = () => {\n    navigate('/login');\n  };\n  return (\n    <div className={css.form}>\n      <p className={css.form__advice}>\n        You can log in with your Google Account:\n      </p>\n      <button className={css.form__googleButton}>\n        <img\n          className={css.form__googleIcon}\n          src={googleIcon}\n          alt=\"Google Icon\"\n        />\n        <span className={css.form__googleText}>Google</span>\n      </button>\n      <p className={css.form__advice}>\n        Or log in using an email and password, after registering:\n      </p>\n      <form className={css.form__form} onSubmit={handleRegistration}>\n        <label htmlFor=\"registrationUsername\" className={css.form__label}>\n          Name:{' '}\n        </label>\n        <input\n          id=\"registrationUsername\"\n          className={css.form__input}\n          name=\"name\"\n          placeholder=\"Enter your name\"\n          autoComplete=\"name\"\n        ></input>\n        <label htmlFor=\"registrationEmail\" className={css.form__label}>\n          Email:{' '}\n        </label>\n        <input\n          id=\"registrationEmail\"\n          className={css.form__input}\n          name=\"email\"\n          type=\"email\"\n          placeholder=\"your@email.com\"\n          autoComplete=\"email\"\n        ></input>\n        <label htmlFor=\"registrationPassword\" className={css.form__label}>\n          Password:\n        </label>\n        <input\n          id=\"registrationPassword\"\n          className={css.form__input}\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"enter password\"\n        ></input>\n        <div className={css.form__buttons}>\n          <button\n            className={css.form__button}\n            type=\"button\"\n            onClick={handleLoginClick}\n          >\n            LOG IN\n          </button>{' '}\n          <button className={css.form__button} type=\"submit\">\n            REGISTRATION\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n","import { RegistrationForm } from '../../components/RegistrationForm/RegistrationForm';\nimport { CabbageGroup } from '../../components/CabbageGroup/CabbageGroup.';\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\nimport { CabbageCouple } from '../../components/CabbageCouple/CabbageCouple';\nimport { MainLogo } from '../../components/MainLogo/MainLogo';\nimport { useScreenSize } from '../../hooks/useScreenSize'\n\nconst Register = () => {\n  const { mobileScreen, tabletScreen, desktopScreen } = useScreenSize();\n\n  return (\n    <HelmetProvider>\n      <div>\n        <Helmet>\n          <title>Registration</title>\n        </Helmet>\n    <CabbageGroup />\n    <MainLogo />\n    <RegistrationForm screenSize={{ mobileScreen, tabletScreen, desktopScreen }} />\n    <CabbageCouple />\n      </div>\n    </HelmetProvider>\n  );\n};\nexport default Register;\n"],"names":["StyledImage","styled","_templateObject","_taggedTemplateLiteral","StyledContainer","_templateObject2","CabbageCouple","_jsx","children","src","cabbageCoupleImage","alt","CabbageGroup","cabbageGroupImage","StyledHeading","StyledParagraph","_templateObject3","StyledDollar","_templateObject4","MainLogo","_jsxs","RegistrationForm","dispatch","useDispatch","navigate","useNavigate","className","css","googleIcon","onSubmit","event","preventDefault","form","target","name","elements","value","email","password","register","reset","htmlFor","id","placeholder","autoComplete","type","onClick","_useScreenSize","useScreenSize","mobileScreen","tabletScreen","desktopScreen","HelmetProvider","Helmet","screenSize"],"sourceRoot":""}