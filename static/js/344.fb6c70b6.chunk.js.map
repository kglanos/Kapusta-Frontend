{"version":3,"file":"static/js/344.fb6c70b6.chunk.js","mappings":"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","sources":["components/CabbageCouple/CabbageCouple.styled.js","components/CabbageCouple/CabbageCouple.js","components/CabbageGroup/CabbageGroup.styled.js","components/CabbageGroup/CabbageGroup..js","components/LoginForm/LoginForm.styled.js","components/LoginForm/LoginForm.jsx","components/MainLogo/MainLogo.styled.js","components/MainLogo/MainLogo.js","hooks/useScreenSize.js","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledImage = styled.img`\n  width: 15vw;\n  height: auto;\n`;\n\nexport const StyledContainer = styled.div`\n  position: absolute;\n  bottom: 3%;\n  left: 20%;\n`;\n","import cabbageCoupleImage from '../../images/desktop/kapusta2.png';\nimport { StyledContainer, StyledImage } from './CabbageCouple.styled';\n\nexport const CabbageCouple = () => {\n  return (\n    <StyledContainer>\n      <StyledImage src={cabbageCoupleImage} alt=\"Cabbages\" />\n    </StyledContainer>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledImage = styled.img`\n  width: 100%;\n  height: auto;\n`;\n\nexport const StyledContainer = styled.div`\n  position: absolute;\n  top: 10%;\n`;\n","import cabbageGroupImage from '../../images/desktop/kapusta.png';\nimport { StyledContainer, StyledImage } from './CabbageGroup.styled';\n\nexport const CabbageGroup = () => {\n  return (\n    <StyledContainer>\n      <StyledImage src={cabbageGroupImage} alt=\"Cabbages\" />\n    </StyledContainer>\n  );\n};\n","import styled from 'styled-components';\n\nexport const FormContainer = styled.div`\n\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 255px auto 105px auto;\n  width: 280px;\n  padding: 40px 20px;\n  background-color: rgba(255, 255, 255, 1);\n  border-radius: 30px;\n  box-shadow: 0px 10px 60px 0px rgba(170, 178, 197, 0.2);\n\n\n  @media screen and (min-width: 768px) {\n  margin: 317px auto 155px auto;\n  padding: 84px 56px;\n  width: 426px;\n  }\n\n@media screen and (min-width: 1280px) {\n  position: absolute;\n  top: 173px;\n  margin: 0;\n  left: 763px;\n  right: 91px;\n}\n`;\n\nexport const FormAdvice = styled.p`\n  font-style: normal;\n  font-weight: 400;\n  font-size: 12px;\n  width: 222px;\n  text-align: center;\n  letter-spacing: 0.04em;\n  line-height: 1.4;\n  color: #52555f;\n  margin-bottom: 16px;\n\n@media screen and (min-width: 768px) {\n  width: auto;\n  margin-bottom: 20px;\n  }\n\n@media screen and (min-width: 1280px) {\nmargin-bottom: 29px;\n}\n`;\n\nexport const FormAdviceSecond = styled.p`\n  font-style: normal;\n  font-weight: 400;\n  font-size: 12px;\n  width: 238px;\n  text-align: left;\n  letter-spacing: 0.04em;\n  line-height: 1.4;\n  color: #52555f;\n  margin-bottom: 16px;\n\n@media screen and (min-width: 768px) {\n  margin-bottom: 20px;\n  }\n\n@media screen and (min-width: 1280px) {\n  margin-bottom: 29px;\n}\n`;\n\nexport const GoogleButton = styled.button`\n  display: flex;\n  column-gap: 9.5px;\n  align-items: center;\n  border: none;\n  padding: 10px 19px;\n  border-radius: 26px;\n  cursor: pointer;\n  margin-bottom: 32px;\n  box-shadow: 1px 2px 3px 0px rgba(170, 178, 197, 0.2);\n`;\n\nexport const GoogleText = styled.span`\n  font-size: 14px;\n  font-weight: 500;\n  letter-spacing: 0.02em;\n  line-height: 1.17;\n`;\n\nexport const FormForm = styled.form`\n  row-gap: 8px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const FormLabel = styled.label`\n  font-size: 10px;\n  font-weight: 500;\n  letter-spacing: 0.04em;\n  align-self: flex-start;\n  margin-bottom: 12px;\n  color: rgba(0, 0, 0, 1);\n\n@media screen and (min-width: 768px) {\n  color: rgba(0, 0, 0, 1);\n  font-size: 12px;\n  letter-spacing: 0.04em;\n  margin-bottom: 12px;\n  }\n`;\n\nexport const FormInput = styled.input`\n  padding: 17px 0 17px 20px;\n  font-size: 14px;\n  letter-spacing: 0.04em;\n  text-align: left;\n  min-width: 240px;\n  border-radius: 30px;\n  border: none;\n  margin-bottom: 20px;\n  background-color: #f6f7fb;\n  color: rgba(166, 171, 185, 1);\n\n\n@media screen and (min-width: 768px) {\n  padding: 17px 0 17px 20px;\n  min-width: 259px;\n  margin-bottom: 32px;\n  }\n`;\n\nexport const FormButtons = styled.div`\n  display: flex;\n  column-gap: 4px;\n\n@media screen and (min-width: 768px) {\ncolumn-gap: 15px;\n  }\n`;\n\nexport const FormButton = styled.button`\n  font-size: 12px;\n  font-weight: 700;\n  cursor: pointer;\n  color: #52555f;\n  letter-spacing: 0.02em;\n  align-items: center;\n  border: none;\n  border-radius: 16px;\n  padding: 12px 34px;\n  background-color: #f5f6fb;\n  box-shadow: 1px 3px 5px 0px rgba(82, 85, 95, 0.15)\n  ;\n\n  &:hover,\n  &:focus {\n    color: #ffffff;\n    background-color: #ff751d;\n    box-shadow: rgba(255, 107, 8, 0.35) 1px 3px 5px 0px;\n  }\n`;","import { useDispatch } from 'react-redux';\nimport googleIcon from '../../icons/Google.png';\nimport { login } from '../../redux/Auth/operations';\nimport { useNavigate } from 'react-router-dom';\nimport {\n  FormContainer,\n  FormForm,\n  FormAdvice,\n  FormAdviceSecond,\n  GoogleButton,\n  GoogleText,\n  FormLabel,\n  FormInput,\n  FormButtons,\n  FormButton,\n} from '../LoginForm/LoginForm.styled';\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const handleLogin = event => {\n    event.preventDefault();\n\n    const form = event.target;\n    const email = form.elements.email.value;\n    const password = form.elements.password.value;\n\n    dispatch(login({ email, password }));\n    form.reset();\n  };\n\n  const handleRegistrationClick = () => {\n    navigate('/register');\n  };\n\n  return (\n    <FormContainer>\n      <FormAdvice>You can log in with your Google Account:</FormAdvice>\n      <GoogleButton>\n        <img src={googleIcon} alt=\"Google Icon\" />\n        <GoogleText>Google</GoogleText>\n      </GoogleButton>\n      <FormAdviceSecond>\n        Or log in using an email and password, after registering:\n      </FormAdviceSecond>\n      <FormForm onSubmit={handleLogin}>\n        <FormLabel htmlFor=\"loginEmail\">Email: </FormLabel>\n        <FormInput\n          id=\"loginEmail\"\n          name=\"email\"\n          type=\"email\"\n          placeholder=\"your@email.com\"\n          autoComplete=\"email\"\n        />\n        <FormLabel htmlFor=\"loginPassword\">Password:</FormLabel>\n        <FormInput\n          id=\"loginPassword\"\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"enter password\"\n        />\n        <FormButtons>\n          <FormButton type=\"submit\">LOG IN</FormButton>{' '}\n          <FormButton type=\"button\" onClick={handleRegistrationClick}>\n            REGISTRATION\n          </FormButton>\n        </FormButtons>\n      </FormForm>\n    </FormContainer>\n  );\n};\n\n\n\n// import { useDispatch } from 'react-redux';\n// import googleIcon from '../../icons/Google.png';\n// import { login } from '../../redux/Auth/operations';\n// import { useNavigate } from 'react-router-dom';\n// import { useMediaQuery } from 'react-responsive'; // Import hooka useMediaQuery\n// import css from './LoginForm.module.css'; // Importować CSS jako 'styles'\n\n// export const LoginForm = () => {\n//   const dispatch = useDispatch();\n//   const navigate = useNavigate();\n//   const mobileScreen = useMediaQuery({\n//     query: '(min-width: 320px) and (max-width: 767px)',\n//   });\n//   const tabletScreen = useMediaQuery({\n//     query: '(min-width: 768px) and (max-width: 1279px)',\n//   });\n//   const desktopScreen = useMediaQuery({ query: '(min-width: 1280px)' });\n\n//   const handleLogin = event => {\n//     event.preventDefault();\n\n//     const form = event.target;\n//     const email = form.elements.email.value;\n//     const password = form.elements.password.value;\n\n//     dispatch(login({ email, password }));\n//     form.reset();\n//   };\n\n//   const handleRegistrationClick = () => {\n//     navigate('/register');\n//   };\n\n//   return (\n//     <div className={form()}>\n//       <p className={css.form__advice}>\n//         You can log in with your Google Account:\n//       </p>\n//       <button className={css.form__googleButton}>\n//         <img\n//           className={css.form__googleIcon}\n//           src={googleIcon}\n//           alt=\"Google Icon\"\n//         />\n//         <span className={css.form__googleText}>Google</span>\n//       </button>\n//       <p className={css.form__advice}>\n//         Or log in using an email and password, after registering:\n//       </p>\n//       <form className={css.form__form} onSubmit={handleLogin}>\n//         <label htmlFor=\"loginEmail\" className={css.form_label}>\n//           Email:{' '}\n//         </label>\n//         <input\n//           id=\"loginEmail\"\n//           className={css.form__input}\n//           name=\"email\"\n//           type=\"email\"\n//           placeholder=\"your@email.com\"\n//           autoComplete=\"email\"\n//         ></input>\n//         <label htmlFor=\"loginPassword\" className={css.form__label}>\n//           Password:\n//         </label>\n//         <input\n//           id=\"loginPassword\"\n//           className={css.form__input}\n//           name=\"password\"\n//           type=\"password\"\n//           placeholder=\"enter password\"\n//         ></input>\n//         <div className={css.form__buttons}>\n//           <button className={css.form__button} type=\"submit\">\n//             LOG IN\n//           </button>{' '}\n//           <button\n//             className={css.form__button}\n//             type=\"button\"\n//             onClick={handleRegistrationClick}\n//           >\n//             REGISTRATION\n//           </button>\n//         </div>\n//       </form>\n//     </div>\n//   );\n\n//   function form() {\n//     if (mobileScreen) {\n//       return css.mobileForm;\n//     } else if (tabletScreen) {\n//       return css.tabletForm;\n//     } else {\n//       return css.desktopForm;\n//     }\n//   }\n// };\n","import styled from 'styled-components';\n\nexport const StyledContainer = styled.div`\n  position: absolute;\n  bottom: 42%;\n  left: 20%;\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`;\nexport const StyledHeading = styled.h1`\n  font-size: 102px;\n  font-weight: 900;\n  text-align: left;\n  margin: 0;\n`;\n\nexport const StyledParagraph = styled.p`\n  color: rgba(82, 85, 95, 1);\n  font-size: 16px;\n  font-weight: 700;\n  line-height: 1.17;\n  letter-spacing: 0.18em;\n  text-align: left;\n  margin: 0 20%;\n`;\nexport const StyledDollar = styled.span`\n  display: inline-block;\n  font-size: 0.9em;\n  vertical-align: middle;\n  transform: scaleY(0.8) translateY(-0.05em);\n  transform-origin: 50%;\n`;\n","import {\n  StyledContainer,\n  StyledHeading,\n  StyledParagraph,\n  StyledDollar,\n} from './MainLogo.styled';\n\nexport const MainLogo = () => {\n  return (\n    <StyledContainer>\n      <StyledHeading>\n        Kapu<StyledDollar>$</StyledDollar>ta\n      </StyledHeading>\n      <StyledParagraph>SMART FINANCE</StyledParagraph>\n    </StyledContainer>\n  );\n};\n","import { useMediaQuery } from 'react-responsive';\n\nexport const useScreenSize = () => {\n  const mobileScreen = useMediaQuery({\n    query: '(min-width: 320px) and (max-width: 767px)',\n  });\n  const tabletScreen = useMediaQuery({\n    query: '(min-width: 768px) and (max-width: 1279px)',\n  });\n  const desktopScreen = useMediaQuery({ query: '(min-width: 1280px)' });\n\n  return { mobileScreen, tabletScreen, desktopScreen };\n};\n","import { LoginForm } from '../../components/LoginForm/LoginForm';\nimport { CabbageGroup } from '../../components/CabbageGroup/CabbageGroup.';\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\nimport { CabbageCouple } from '../../components/CabbageCouple/CabbageCouple';\nimport { MainLogo } from '../../components/MainLogo/MainLogo';\nimport { useScreenSize } from '../../hooks/useScreenSize'\n\nconst Login = () => {\n  const { mobileScreen, tabletScreen, desktopScreen } = useScreenSize(); \n\n  return (\n    <HelmetProvider>\n      <div>\n        <Helmet>\n          <title>Login</title>\n        </Helmet>\n    <CabbageGroup />\n    <MainLogo />\n    <LoginForm screenSize={{ mobileScreen, tabletScreen, desktopScreen }} /> \n    <CabbageCouple />\n      </div>\n    </HelmetProvider>\n  );\n};\n\nexport default Login;\n"],"names":["StyledImage","styled","_templateObject","_taggedTemplateLiteral","StyledContainer","_templateObject2","CabbageCouple","_jsx","children","src","cabbageCoupleImage","alt","CabbageGroup","cabbageGroupImage","FormContainer","FormAdvice","FormAdviceSecond","_templateObject3","GoogleButton","_templateObject4","GoogleText","_templateObject5","FormForm","_templateObject6","FormLabel","_templateObject7","FormInput","_templateObject8","FormButtons","_templateObject9","FormButton","_templateObject10","LoginForm","dispatch","useDispatch","navigate","useNavigate","_jsxs","googleIcon","onSubmit","event","preventDefault","form","target","email","elements","value","password","login","reset","htmlFor","id","name","type","placeholder","autoComplete","onClick","StyledHeading","StyledParagraph","StyledDollar","MainLogo","useScreenSize","mobileScreen","useMediaQuery","query","tabletScreen","desktopScreen","_useScreenSize","HelmetProvider","Helmet","screenSize"],"sourceRoot":""}