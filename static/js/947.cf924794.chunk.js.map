{"version":3,"file":"static/js/947.cf924794.chunk.js","mappings":"yPAEaA,EAAgBC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,khBAyB1BC,EAAaH,EAAAA,GAAAA,EAAQI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,sXAqBrBG,EAAmBL,EAAAA,GAAAA,EAAQM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,kWAoB3BK,EAAeP,EAAAA,GAAAA,OAAaQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,0TAe5BO,EAAaT,EAAAA,GAAAA,KAAWU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,oGAOxBS,EAAWX,EAAAA,GAAAA,KAAWY,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,wEAMtBW,EAAYb,EAAAA,GAAAA,MAAYc,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,oQAcxBa,EAAYf,EAAAA,GAAAA,MAAYgB,IAAAA,GAAAd,EAAAA,EAAAA,GAAA,oYAmBxBe,EAAcjB,EAAAA,GAAAA,IAAUkB,IAAAA,GAAAhB,EAAAA,EAAAA,GAAA,wHASxBiB,EAAanB,EAAAA,GAAAA,OAAaoB,IAAAA,GAAAlB,EAAAA,EAAAA,GAAA,0jB,SCzH1BmB,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAiBjB,OACEC,EAAAA,EAAAA,MAAC3B,EAAa,CAAA4B,SAAA,EACZC,EAAAA,EAAAA,KAACzB,EAAU,CAAAwB,SAAC,8CACZD,EAAAA,EAAAA,MAACnB,EAAY,CAAAoB,SAAA,EACXC,EAAAA,EAAAA,KAAA,OAAKC,IAAKC,EAAYC,IAAI,iBAC1BH,EAAAA,EAAAA,KAACnB,EAAU,CAAAkB,SAAC,eAEdC,EAAAA,EAAAA,KAACvB,EAAgB,CAAAsB,SAAC,+DAGlBD,EAAAA,EAAAA,MAACf,EAAQ,CAACqB,SAzBM,SAAAC,GAClBA,EAAMC,iBAEN,IAAMC,EAAOF,EAAMG,OACbC,EAAQF,EAAKG,SAASD,MAAME,MAC5BC,EAAWL,EAAKG,SAASE,SAASD,MAExCjB,GAASmB,EAAAA,EAAAA,IAAM,CAAEJ,MAAAA,EAAOG,SAAAA,KACxBL,EAAKO,OACP,EAgBoCf,SAAA,EAC9BC,EAAAA,EAAAA,KAACf,EAAS,CAAC8B,QAAQ,aAAYhB,SAAC,aAChCC,EAAAA,EAAAA,KAACb,EAAS,CACR6B,GAAG,aACHC,KAAK,QACLC,KAAK,QACLC,YAAY,iBACZC,aAAa,WAEfpB,EAAAA,EAAAA,KAACf,EAAS,CAAC8B,QAAQ,gBAAehB,SAAC,eACnCC,EAAAA,EAAAA,KAACb,EAAS,CACR6B,GAAG,gBACHC,KAAK,WACLC,KAAK,WACLC,YAAY,oBAEdrB,EAAAA,EAAAA,MAACT,EAAW,CAAAU,SAAA,EACVC,EAAAA,EAAAA,KAACT,EAAU,CAAC2B,KAAK,SAAQnB,SAAC,WAAoB,KAC9CC,EAAAA,EAAAA,KAACT,EAAU,CAAC2B,KAAK,SAASG,QAhCF,WAC9BzB,EAAS,YACX,EA8BmEG,SAAC,yBAOtE,E,iDC7CA,EAnBc,WACZ,IAAAuB,GAAsDC,EAAAA,EAAAA,KAA9CC,EAAYF,EAAZE,aAAcC,EAAYH,EAAZG,aAAcC,EAAaJ,EAAbI,cAEpC,OACE1B,EAAAA,EAAAA,KAAC2B,EAAAA,GAAc,CAAA5B,UACbD,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAC4B,EAAAA,GAAM,CAAA7B,UACLC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,aAGTC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAY,KACb7B,EAAAA,EAAAA,KAAC8B,EAAAA,EAAQ,KACT9B,EAAAA,EAAAA,KAACP,EAAS,CAACsC,WAAY,CAAEP,aAAAA,EAAcC,aAAAA,EAAcC,cAAAA,MACrD1B,EAAAA,EAAAA,KAACgC,EAAAA,EAAa,QAItB,C","sources":["components/LoginForm/LoginForm.styled.js","components/LoginForm/LoginForm.jsx","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const FormContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 53px auto 105px auto;\n  width: 280px;\n  padding: 40px 20px;\n  background-color: rgba(255, 255, 255, 1);\n  border-radius: 30px;\n  box-shadow: 0px 10px 60px 0px rgba(170, 178, 197, 0.2);\n\n  @media screen and (min-width: 768px) {\n    margin: 80px auto 155px auto;  \n    padding: 56px 83px;\n    width: 426px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    position: absolute;\n    top: 173px;\n    margin: 0;\n    left: 763px;\n    right: 91px;\n  }\n`;\n\nexport const FormAdvice = styled.p`\n  font-style: normal;\n  font-weight: 400;\n  font-size: 12px;\n  width: 222px;\n  text-align: center;\n  letter-spacing: 0.04em;\n  line-height: 1.4;\n  color: #52555f;\n  margin-bottom: 16px;\n\n  @media screen and (min-width: 768px) {\n    width: auto;\n    margin-bottom: 20px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    margin-bottom: 29px;\n  }\n`;\n\nexport const FormAdviceSecond = styled.p`\n  font-style: normal;\n  font-weight: 400;\n  font-size: 12px;\n  width: 238px;\n  text-align: left;\n  letter-spacing: 0.04em;\n  line-height: 1.4;\n  color: #52555f;\n  margin-bottom: 16px;\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 20px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    margin-bottom: 29px;\n  }\n`;\n\nexport const GoogleButton = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-left: auto; \n  margin-right: auto; \n  column-gap: 9.5px;\n  border: none;\n  padding: 10px 19px;\n  border-radius: 26px;\n  cursor: pointer;\n  margin-bottom: 32px;\n  box-shadow: 1px 2px 3px 0px rgba(170, 178, 197, 0.2);\n`;\n\nexport const GoogleText = styled.span`\n  font-size: 14px;\n  font-weight: 500;\n  letter-spacing: 0.02em;\n  line-height: 1.17;\n`;\n\nexport const FormForm = styled.form`\n  row-gap: 8px;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const FormLabel = styled.label`\n  font-size: 10px;\n  font-weight: 500;\n  letter-spacing: 0.04em;\n  margin-bottom: 12px;\n  color: rgba(0, 0, 0, 1);\n\n  @media screen and (min-width: 768px) {\n    color: rgba(0, 0, 0, 1);\n    font-size: 12px;\n    letter-spacing: 0.04em;\n  }\n`;\n\nexport const FormInput = styled.input`\n  padding: 17px 0 17px 20px;\n  font-size: 14px;\n  letter-spacing: 0.04em;\n  text-align: left;\n  min-width: 240px;\n  border-radius: 30px;\n  border: none;\n  margin-bottom: 20px;\n  background-color: #f6f7fb;\n  color: rgba(166, 171, 185, 1);\n\n  @media screen and (min-width: 768px) {\n    padding: 17px 0 17px 20px;\n    min-width: 259px;\n    margin-bottom: 32px;\n  }\n`;\n\nexport const FormButtons = styled.div`\n  display: flex;\n  column-gap: 4px;\n\n  @media screen and (min-width: 768px) {\n    column-gap: 15px;\n  }\n`;\n\nexport const FormButton = styled.button`\n  display: flex; \n  justify-content: center;\n  font-size: 12px;\n  font-weight: 700;\n  cursor: pointer;\n  color: #52555f;\n  letter-spacing: 0.02em;\n  align-items: center;\n  border: none;\n  border-radius: 16px;\n  padding: 12px 31px;\n  background-color: #f5f6fb;\n  box-shadow: 1px 3px 5px 0px rgba(82, 85, 95, 0.15);\n  width: 50%; \n\n  &:hover,\n  &:focus {\n    color: #ffffff;\n    background-color: #ff751d;\n    box-shadow: rgba(255, 107, 8, 0.35) 1px 3px 5px 0px;\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: 12px 34px;\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport googleIcon from '../../icons/Google.png';\nimport { login } from '../../redux/Auth/operations';\nimport { useNavigate } from 'react-router-dom';\nimport {\n  FormContainer,\n  FormForm,\n  FormAdvice,\n  FormAdviceSecond,\n  GoogleButton,\n  GoogleText,\n  FormLabel,\n  FormInput,\n  FormButtons,\n  FormButton,\n} from '../LoginForm/LoginForm.styled';\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const handleLogin = event => {\n    event.preventDefault();\n\n    const form = event.target;\n    const email = form.elements.email.value;\n    const password = form.elements.password.value;\n\n    dispatch(login({ email, password }));\n    form.reset();\n  };\n\n  const handleRegistrationClick = () => {\n    navigate('/register');\n  };\n\n  return (\n    <FormContainer>\n      <FormAdvice>You can log in with your Google Account:</FormAdvice>\n      <GoogleButton>\n        <img src={googleIcon} alt=\"Google Icon\" />\n        <GoogleText>Google</GoogleText>\n      </GoogleButton>\n      <FormAdviceSecond>\n        Or log in using an email and password, after registering:\n      </FormAdviceSecond>\n      <FormForm onSubmit={handleLogin}>\n        <FormLabel htmlFor=\"loginEmail\">Email: </FormLabel>\n        <FormInput\n          id=\"loginEmail\"\n          name=\"email\"\n          type=\"email\"\n          placeholder=\"your@email.com\"\n          autoComplete=\"email\"\n        />\n        <FormLabel htmlFor=\"loginPassword\">Password:</FormLabel>\n        <FormInput\n          id=\"loginPassword\"\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"enter password\"\n        />\n        <FormButtons>\n          <FormButton type=\"submit\">LOG IN</FormButton>{' '}\n          <FormButton type=\"button\" onClick={handleRegistrationClick}>\n            REGISTRATION\n          </FormButton>\n        </FormButtons>\n      </FormForm>\n    </FormContainer>\n  );\n};\n\n// import { useDispatch } from 'react-redux';\n// import googleIcon from '../../icons/Google.png';\n// import { login } from '../../redux/Auth/operations';\n// import { useNavigate } from 'react-router-dom';\n// import { useMediaQuery } from 'react-responsive'; // Import hooka useMediaQuery\n// import css from './LoginForm.module.css'; // ImportowaÄ‡ CSS jako 'styles'\n\n// export const LoginForm = () => {\n//   const dispatch = useDispatch();\n//   const navigate = useNavigate();\n//   const mobileScreen = useMediaQuery({\n//     query: '(min-width: 320px) and (max-width: 767px)',\n//   });\n//   const tabletScreen = useMediaQuery({\n//     query: '(min-width: 768px) and (max-width: 1279px)',\n//   });\n//   const desktopScreen = useMediaQuery({ query: '(min-width: 1280px)' });\n\n//   const handleLogin = event => {\n//     event.preventDefault();\n\n//     const form = event.target;\n//     const email = form.elements.email.value;\n//     const password = form.elements.password.value;\n\n//     dispatch(login({ email, password }));\n//     form.reset();\n//   };\n\n//   const handleRegistrationClick = () => {\n//     navigate('/register');\n//   };\n\n//   return (\n//     <div className={form()}>\n//       <p className={css.form__advice}>\n//         You can log in with your Google Account:\n//       </p>\n//       <button className={css.form__googleButton}>\n//         <img\n//           className={css.form__googleIcon}\n//           src={googleIcon}\n//           alt=\"Google Icon\"\n//         />\n//         <span className={css.form__googleText}>Google</span>\n//       </button>\n//       <p className={css.form__advice}>\n//         Or log in using an email and password, after registering:\n//       </p>\n//       <form className={css.form__form} onSubmit={handleLogin}>\n//         <label htmlFor=\"loginEmail\" className={css.form_label}>\n//           Email:{' '}\n//         </label>\n//         <input\n//           id=\"loginEmail\"\n//           className={css.form__input}\n//           name=\"email\"\n//           type=\"email\"\n//           placeholder=\"your@email.com\"\n//           autoComplete=\"email\"\n//         ></input>\n//         <label htmlFor=\"loginPassword\" className={css.form__label}>\n//           Password:\n//         </label>\n//         <input\n//           id=\"loginPassword\"\n//           className={css.form__input}\n//           name=\"password\"\n//           type=\"password\"\n//           placeholder=\"enter password\"\n//         ></input>\n//         <div className={css.form__buttons}>\n//           <button className={css.form__button} type=\"submit\">\n//             LOG IN\n//           </button>{' '}\n//           <button\n//             className={css.form__button}\n//             type=\"button\"\n//             onClick={handleRegistrationClick}\n//           >\n//             REGISTRATION\n//           </button>\n//         </div>\n//       </form>\n//     </div>\n//   );\n\n//   function form() {\n//     if (mobileScreen) {\n//       return css.mobileForm;\n//     } else if (tabletScreen) {\n//       return css.tabletForm;\n//     } else {\n//       return css.desktopForm;\n//     }\n//   }\n// };\n","import { LoginForm } from '../../components/LoginForm/LoginForm';\nimport { CabbageGroup } from '../../components/CabbageGroup/CabbageGroup';\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\nimport { CabbageCouple } from '../../components/CabbageCouple/CabbageCouple';\nimport { MainLogo } from '../../components/MainLogo/MainLogo';\nimport { useScreenSize } from '../../hooks/useScreenSize';\n\nconst Login = () => {\n  const { mobileScreen, tabletScreen, desktopScreen } = useScreenSize();\n\n  return (\n    <HelmetProvider>\n      <div>\n        <Helmet>\n          <title>Login</title>\n        </Helmet>\n\n        <CabbageGroup />\n        <MainLogo />\n        <LoginForm screensize={{ mobileScreen, tabletScreen, desktopScreen }} />\n        <CabbageCouple />\n      </div>\n    </HelmetProvider>\n  );\n};\n\nexport default Login;\n"],"names":["FormContainer","styled","_templateObject","_taggedTemplateLiteral","FormAdvice","_templateObject2","FormAdviceSecond","_templateObject3","GoogleButton","_templateObject4","GoogleText","_templateObject5","FormForm","_templateObject6","FormLabel","_templateObject7","FormInput","_templateObject8","FormButtons","_templateObject9","FormButton","_templateObject10","LoginForm","dispatch","useDispatch","navigate","useNavigate","_jsxs","children","_jsx","src","googleIcon","alt","onSubmit","event","preventDefault","form","target","email","elements","value","password","login","reset","htmlFor","id","name","type","placeholder","autoComplete","onClick","_useScreenSize","useScreenSize","mobileScreen","tabletScreen","desktopScreen","HelmetProvider","Helmet","CabbageGroup","MainLogo","screensize","CabbageCouple"],"sourceRoot":""}